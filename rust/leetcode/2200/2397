impl Solution {
    pub fn maximum_rows(mut matrix: Vec<Vec<i32>>, num_select: i32) -> i32 {
       fn dfs(num:i32,p:i32,matrix: &mut Vec<Vec<i32>>, num_select: i32,ans:&mut i32){
           if num==num_select{
               *ans=(*ans).max(matrix.iter().filter(|row| row.iter().all(|&x| x!=1)).count() as i32);
               return
           }
           for k in p..=(matrix[0].len() as i32-num_select+num){
                for i in 0..matrix.len(){
                    if matrix[i][k as usize]==1{
                                matrix[i][k as usize]=2;
                    }
                }
                dfs(num+1,k+1,matrix,num_select,ans);
                for i in 0..matrix.len(){
                    if matrix[i][k as usize]==2{
                                matrix[i][k as usize]=1;
                    }
                }
           }
       }
       let mut ans=0;
       dfs(0,0,&mut matrix,num_select,&mut ans);
       ans
    }
}